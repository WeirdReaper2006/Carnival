@model Carnival.Models.Food_Product

@{
    ViewBag.Title = "Edit";
}

<div style="display:none" id="loader">
    <img src="~/Content/ZZ5H.gif" height="50px" width="50px" />
</div>

<h2>Edit</h2>

@using (Ajax.BeginForm("Edit", "Food_Products", new AjaxOptions { HttpMethod = "POST", OnSuccess = "fnSuccess", OnFailure = "fnFailure", LoadingElementId = "loader", LoadingElementDuration = 2000 }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Food_Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FoodID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default btn-border">Save</button>
            </div>
        </div>
    </div>
}

<div>
    <button onclick="location.href='@Url.Action("Index")'" class="btn btn-default btn-border">Back to List</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var formSubmitted = false;

        function disableSubmitButton() {
            if (!formSubmitted) {
                formSubmitted = true;
                $("input[type=submit]").prop("disabled", true);
            } else {
                return false; // Abort the form submission if already submitted
            }
        }

        function enableSubmitButton() {
            formSubmitted = false;
            $("input[type=submit]").prop("disabled", false);
        }

        function fnSuccess(data) {
            console.log(data);
            var result = confirm("Your Data has been Editted. Do you want to continue?");
            if (result) {
                $("#loader").hide();
            } else {
                $("#loader").show();
            }
            enableSubmitButton();
        }

        function fnFailure(data) {
            console.log(data);
            var result = confirm("Your Data has not been Editted. Do you want to continue?");
            if (result) {
                $("#loader").hide();
            } else {
                $("#loader").show();
            }
            enableSubmitButton();
        }
    </script>

    <style>
        .btn-border {
            border: 2px solid #000;
            color: black;
            background-color: white;
            transition: box-shadow 0.3s ease-in-out, color 0.2s ease-in-out, background-color 0.3s ease-in-out;
        }

            .btn-border:hover {
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Adjust the opacity and blur to make it darker */
                color: white;
                background-color: black;
            }
    </style>


}
