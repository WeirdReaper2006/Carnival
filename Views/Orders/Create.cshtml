@model Carnival.Models.Order

@{
    ViewBag.Title = "Create";
}

<div style="display:none" id="loader">
    <img src="~/Content/ZZ5H.gif" height="50" width="50" />
</div>

<h2>Create</h2>


@using (Ajax.BeginForm("Create", "Orders", new AjaxOptions { HttpMethod = "POST", OnBegin = "disableSubmitButton", OnSuccess = "fnSuccess", OnFailure = "fnFailure", LoadingElementId = "loader", LoadingElementDuration = 2000 }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodID, "Food Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FoodID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FoodID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StallID, "Stall Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StallID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StallID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-border" id="submitButton" />
            </div>
        </div>
    </div>
}

<div>
    <button onclick="location.href='@Url.Action("Index")'" class="btn btn-default btn-border">Back to List</button>
</div>

@section Scripts {
    <script src="~/Scripts/jquery-3.7.0.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var formSubmitted = false;

        function disableSubmitButton() {
            if (!formSubmitted) {
                formSubmitted = true;
                $("#submitButton").prop("disabled", true);
            } else {
                return false; // Abort the form submission if already submitted
            }
        }

        function enableSubmitButton() {
            formSubmitted = false;
            $("#submitButton").prop("disabled", false);
        }

        function clearFormFields() {
            $("select").val(""); // Clear dropdown values
            $("input[type='text'], input[type='number']").val(""); // Clear text and number input values
        }

        var alertDisplayed = false;

        function fnSuccess(data) {
            console.log(data);
            if (!alertDisplayed) {
                alertDisplayed = true;
                setTimeout(function () {
                    clearFormFields();
                    var result = confirm("Your data has been entered. Do you want to continue?");
                    if (result) {
                        $("#loader").hide();
                        enableSubmitButton();
                    } else {
                        $("#loader").show();
                    }
                    alertDisplayed = false; // Reset alertDisplayed to false after displaying the alert
                }, 2000);
            }
        }





        function fnFailure(data) {
            console.log(data);
            if (!alertDisplayed) {
                alertDisplayed = true;
                setTimeout(function () {
                    clearFormFields(); // Clear form fields before displaying alert
                    var result = confirm("Your Data has not been Entered. Do you want to continue?");
                    if (result) {
                        $("#loader").hide();
                        enableSubmitButton();
                    } else {
                        $("#loader").show();
                    }
                }, 2000); // Delay the alert by 2 seconds (adjust as needed)
            }
        }


    </script>

    <style>
        .btn-border {
            border: 2px solid #000;
            color: black;
            background-color: white;
            transition: box-shadow 0.3s ease-in-out, color 0.2s ease-in-out, background-color 0.3s ease-in-out;
        }

            .btn-border:hover {
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Adjust the opacity and blur to make it darker */
                color: white;
                background-color: black;
            }
    </style>
}
